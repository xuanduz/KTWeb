#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace De1.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CSDLThuVien")]
	public partial class ThuVienDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttBanSaoSach(tBanSaoSach instance);
    partial void UpdatetBanSaoSach(tBanSaoSach instance);
    partial void DeletetBanSaoSach(tBanSaoSach instance);
    partial void InserttTheLoai(tTheLoai instance);
    partial void UpdatetTheLoai(tTheLoai instance);
    partial void DeletetTheLoai(tTheLoai instance);
    partial void InserttDocGia(tDocGia instance);
    partial void UpdatetDocGia(tDocGia instance);
    partial void DeletetDocGia(tDocGia instance);
    partial void InserttDoiTuong(tDoiTuong instance);
    partial void UpdatetDoiTuong(tDoiTuong instance);
    partial void DeletetDoiTuong(tDoiTuong instance);
    partial void InserttDonVi(tDonVi instance);
    partial void UpdatetDonVi(tDonVi instance);
    partial void DeletetDonVi(tDonVi instance);
    partial void InserttLoaiSach(tLoaiSach instance);
    partial void UpdatetLoaiSach(tLoaiSach instance);
    partial void DeletetLoaiSach(tLoaiSach instance);
    partial void InserttMuonTra(tMuonTra instance);
    partial void UpdatetMuonTra(tMuonTra instance);
    partial void DeletetMuonTra(tMuonTra instance);
    partial void InserttNgonNgu(tNgonNgu instance);
    partial void UpdatetNgonNgu(tNgonNgu instance);
    partial void DeletetNgonNgu(tNgonNgu instance);
    partial void InserttNhaXB(tNhaXB instance);
    partial void UpdatetNhaXB(tNhaXB instance);
    partial void DeletetNhaXB(tNhaXB instance);
    partial void InserttSach(tSach instance);
    partial void UpdatetSach(tSach instance);
    partial void DeletetSach(tSach instance);
    partial void InserttTheDocGia(tTheDocGia instance);
    partial void UpdatetTheDocGia(tTheDocGia instance);
    partial void DeletetTheDocGia(tTheDocGia instance);
    #endregion
		
		public ThuVienDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CSDLThuVienConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ThuVienDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ThuVienDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ThuVienDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ThuVienDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tBanSaoSach> tBanSaoSaches
		{
			get
			{
				return this.GetTable<tBanSaoSach>();
			}
		}
		
		public System.Data.Linq.Table<tTheLoai> tTheLoais
		{
			get
			{
				return this.GetTable<tTheLoai>();
			}
		}
		
		public System.Data.Linq.Table<tDocGia> tDocGias
		{
			get
			{
				return this.GetTable<tDocGia>();
			}
		}
		
		public System.Data.Linq.Table<tDoiTuong> tDoiTuongs
		{
			get
			{
				return this.GetTable<tDoiTuong>();
			}
		}
		
		public System.Data.Linq.Table<tDonVi> tDonVis
		{
			get
			{
				return this.GetTable<tDonVi>();
			}
		}
		
		public System.Data.Linq.Table<tLoaiSach> tLoaiSaches
		{
			get
			{
				return this.GetTable<tLoaiSach>();
			}
		}
		
		public System.Data.Linq.Table<tMuonTra> tMuonTras
		{
			get
			{
				return this.GetTable<tMuonTra>();
			}
		}
		
		public System.Data.Linq.Table<tNgonNgu> tNgonNgus
		{
			get
			{
				return this.GetTable<tNgonNgu>();
			}
		}
		
		public System.Data.Linq.Table<tNhaXB> tNhaXBs
		{
			get
			{
				return this.GetTable<tNhaXB>();
			}
		}
		
		public System.Data.Linq.Table<tSach> tSaches
		{
			get
			{
				return this.GetTable<tSach>();
			}
		}
		
		public System.Data.Linq.Table<tTheDocGia> tTheDocGias
		{
			get
			{
				return this.GetTable<tTheDocGia>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tBanSaoSach")]
	public partial class tBanSaoSach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaBanSao;
		
		private string _MaSach;
		
		private System.Nullable<bool> _TrangThai;
		
		private string _TinhTrangSach;
		
		private string _ViTri;
		
		private EntitySet<tMuonTra> _tMuonTras;
		
		private EntityRef<tSach> _tSach;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBanSaoChanging(string value);
    partial void OnMaBanSaoChanged();
    partial void OnMaSachChanging(string value);
    partial void OnMaSachChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    partial void OnTinhTrangSachChanging(string value);
    partial void OnTinhTrangSachChanged();
    partial void OnViTriChanging(string value);
    partial void OnViTriChanged();
    #endregion
		
		public tBanSaoSach()
		{
			this._tMuonTras = new EntitySet<tMuonTra>(new Action<tMuonTra>(this.attach_tMuonTras), new Action<tMuonTra>(this.detach_tMuonTras));
			this._tSach = default(EntityRef<tSach>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBanSao", DbType="Char(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaBanSao
		{
			get
			{
				return this._MaBanSao;
			}
			set
			{
				if ((this._MaBanSao != value))
				{
					this.OnMaBanSaoChanging(value);
					this.SendPropertyChanging();
					this._MaBanSao = value;
					this.SendPropertyChanged("MaBanSao");
					this.OnMaBanSaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSach", DbType="Char(25)")]
		public string MaSach
		{
			get
			{
				return this._MaSach;
			}
			set
			{
				if ((this._MaSach != value))
				{
					if (this._tSach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSachChanging(value);
					this.SendPropertyChanging();
					this._MaSach = value;
					this.SendPropertyChanged("MaSach");
					this.OnMaSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrangSach", DbType="NVarChar(255)")]
		public string TinhTrangSach
		{
			get
			{
				return this._TinhTrangSach;
			}
			set
			{
				if ((this._TinhTrangSach != value))
				{
					this.OnTinhTrangSachChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangSach = value;
					this.SendPropertyChanged("TinhTrangSach");
					this.OnTinhTrangSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViTri", DbType="NVarChar(255)")]
		public string ViTri
		{
			get
			{
				return this._ViTri;
			}
			set
			{
				if ((this._ViTri != value))
				{
					this.OnViTriChanging(value);
					this.SendPropertyChanging();
					this._ViTri = value;
					this.SendPropertyChanged("ViTri");
					this.OnViTriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tBanSaoSach_tMuonTra", Storage="_tMuonTras", ThisKey="MaBanSao", OtherKey="MaBanSao")]
		public EntitySet<tMuonTra> tMuonTras
		{
			get
			{
				return this._tMuonTras;
			}
			set
			{
				this._tMuonTras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tSach_tBanSaoSach", Storage="_tSach", ThisKey="MaSach", OtherKey="MaSach", IsForeignKey=true)]
		public tSach tSach
		{
			get
			{
				return this._tSach.Entity;
			}
			set
			{
				tSach previousValue = this._tSach.Entity;
				if (((previousValue != value) 
							|| (this._tSach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tSach.Entity = null;
						previousValue.tBanSaoSaches.Remove(this);
					}
					this._tSach.Entity = value;
					if ((value != null))
					{
						value.tBanSaoSaches.Add(this);
						this._MaSach = value.MaSach;
					}
					else
					{
						this._MaSach = default(string);
					}
					this.SendPropertyChanged("tSach");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tMuonTras(tMuonTra entity)
		{
			this.SendPropertyChanging();
			entity.tBanSaoSach = this;
		}
		
		private void detach_tMuonTras(tMuonTra entity)
		{
			this.SendPropertyChanging();
			entity.tBanSaoSach = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tTheLoai")]
	public partial class tTheLoai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTheLoai;
		
		private string _TenTheLoai;
		
		private EntitySet<tSach> _tSaches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTheLoaiChanging(string value);
    partial void OnMaTheLoaiChanged();
    partial void OnTenTheLoaiChanging(string value);
    partial void OnTenTheLoaiChanged();
    #endregion
		
		public tTheLoai()
		{
			this._tSaches = new EntitySet<tSach>(new Action<tSach>(this.attach_tSaches), new Action<tSach>(this.detach_tSaches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTheLoai", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTheLoai
		{
			get
			{
				return this._MaTheLoai;
			}
			set
			{
				if ((this._MaTheLoai != value))
				{
					this.OnMaTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaTheLoai = value;
					this.SendPropertyChanged("MaTheLoai");
					this.OnMaTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTheLoai", DbType="NVarChar(200)")]
		public string TenTheLoai
		{
			get
			{
				return this._TenTheLoai;
			}
			set
			{
				if ((this._TenTheLoai != value))
				{
					this.OnTenTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenTheLoai = value;
					this.SendPropertyChanged("TenTheLoai");
					this.OnTenTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tTheLoai_tSach", Storage="_tSaches", ThisKey="MaTheLoai", OtherKey="MaTheLoai")]
		public EntitySet<tSach> tSaches
		{
			get
			{
				return this._tSaches;
			}
			set
			{
				this._tSaches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tSaches(tSach entity)
		{
			this.SendPropertyChanging();
			entity.tTheLoai = this;
		}
		
		private void detach_tSaches(tSach entity)
		{
			this.SendPropertyChanging();
			entity.tTheLoai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tDocGia")]
	public partial class tDocGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDG;
		
		private string _HoDem;
		
		private string _TenDG;
		
		private string _SoCMND;
		
		private string _MaDonVi;
		
		private System.Nullable<System.DateTime> _Ngaysinh;
		
		private string _MaDT;
		
		private string _DiaChi;
		
		private string _Anh;
		
		private EntitySet<tTheDocGia> _tTheDocGias;
		
		private EntityRef<tDoiTuong> _tDoiTuong;
		
		private EntityRef<tDonVi> _tDonVi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDGChanging(string value);
    partial void OnMaDGChanged();
    partial void OnHoDemChanging(string value);
    partial void OnHoDemChanged();
    partial void OnTenDGChanging(string value);
    partial void OnTenDGChanged();
    partial void OnSoCMNDChanging(string value);
    partial void OnSoCMNDChanged();
    partial void OnMaDonViChanging(string value);
    partial void OnMaDonViChanged();
    partial void OnNgaysinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaysinhChanged();
    partial void OnMaDTChanging(string value);
    partial void OnMaDTChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnAnhChanging(string value);
    partial void OnAnhChanged();
    #endregion
		
		public tDocGia()
		{
			this._tTheDocGias = new EntitySet<tTheDocGia>(new Action<tTheDocGia>(this.attach_tTheDocGias), new Action<tTheDocGia>(this.detach_tTheDocGias));
			this._tDoiTuong = default(EntityRef<tDoiTuong>);
			this._tDonVi = default(EntityRef<tDonVi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDG", DbType="Char(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDG
		{
			get
			{
				return this._MaDG;
			}
			set
			{
				if ((this._MaDG != value))
				{
					this.OnMaDGChanging(value);
					this.SendPropertyChanging();
					this._MaDG = value;
					this.SendPropertyChanged("MaDG");
					this.OnMaDGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoDem", DbType="NVarChar(55)")]
		public string HoDem
		{
			get
			{
				return this._HoDem;
			}
			set
			{
				if ((this._HoDem != value))
				{
					this.OnHoDemChanging(value);
					this.SendPropertyChanging();
					this._HoDem = value;
					this.SendPropertyChanged("HoDem");
					this.OnHoDemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDG", DbType="NVarChar(25)")]
		public string TenDG
		{
			get
			{
				return this._TenDG;
			}
			set
			{
				if ((this._TenDG != value))
				{
					this.OnTenDGChanging(value);
					this.SendPropertyChanging();
					this._TenDG = value;
					this.SendPropertyChanged("TenDG");
					this.OnTenDGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoCMND", DbType="NVarChar(25)")]
		public string SoCMND
		{
			get
			{
				return this._SoCMND;
			}
			set
			{
				if ((this._SoCMND != value))
				{
					this.OnSoCMNDChanging(value);
					this.SendPropertyChanging();
					this._SoCMND = value;
					this.SendPropertyChanged("SoCMND");
					this.OnSoCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDonVi", DbType="Char(25)")]
		public string MaDonVi
		{
			get
			{
				return this._MaDonVi;
			}
			set
			{
				if ((this._MaDonVi != value))
				{
					if (this._tDonVi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDonViChanging(value);
					this.SendPropertyChanging();
					this._MaDonVi = value;
					this.SendPropertyChanged("MaDonVi");
					this.OnMaDonViChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaysinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ngaysinh
		{
			get
			{
				return this._Ngaysinh;
			}
			set
			{
				if ((this._Ngaysinh != value))
				{
					this.OnNgaysinhChanging(value);
					this.SendPropertyChanging();
					this._Ngaysinh = value;
					this.SendPropertyChanged("Ngaysinh");
					this.OnNgaysinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDT", DbType="Char(25)")]
		public string MaDT
		{
			get
			{
				return this._MaDT;
			}
			set
			{
				if ((this._MaDT != value))
				{
					if (this._tDoiTuong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDTChanging(value);
					this.SendPropertyChanging();
					this._MaDT = value;
					this.SendPropertyChanged("MaDT");
					this.OnMaDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(200)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anh", DbType="NChar(150)")]
		public string Anh
		{
			get
			{
				return this._Anh;
			}
			set
			{
				if ((this._Anh != value))
				{
					this.OnAnhChanging(value);
					this.SendPropertyChanging();
					this._Anh = value;
					this.SendPropertyChanged("Anh");
					this.OnAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tDocGia_tTheDocGia", Storage="_tTheDocGias", ThisKey="MaDG", OtherKey="MaDG")]
		public EntitySet<tTheDocGia> tTheDocGias
		{
			get
			{
				return this._tTheDocGias;
			}
			set
			{
				this._tTheDocGias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tDoiTuong_tDocGia", Storage="_tDoiTuong", ThisKey="MaDT", OtherKey="MaDT", IsForeignKey=true)]
		public tDoiTuong tDoiTuong
		{
			get
			{
				return this._tDoiTuong.Entity;
			}
			set
			{
				tDoiTuong previousValue = this._tDoiTuong.Entity;
				if (((previousValue != value) 
							|| (this._tDoiTuong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tDoiTuong.Entity = null;
						previousValue.tDocGias.Remove(this);
					}
					this._tDoiTuong.Entity = value;
					if ((value != null))
					{
						value.tDocGias.Add(this);
						this._MaDT = value.MaDT;
					}
					else
					{
						this._MaDT = default(string);
					}
					this.SendPropertyChanged("tDoiTuong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tDonVi_tDocGia", Storage="_tDonVi", ThisKey="MaDonVi", OtherKey="MaDonVi", IsForeignKey=true)]
		public tDonVi tDonVi
		{
			get
			{
				return this._tDonVi.Entity;
			}
			set
			{
				tDonVi previousValue = this._tDonVi.Entity;
				if (((previousValue != value) 
							|| (this._tDonVi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tDonVi.Entity = null;
						previousValue.tDocGias.Remove(this);
					}
					this._tDonVi.Entity = value;
					if ((value != null))
					{
						value.tDocGias.Add(this);
						this._MaDonVi = value.MaDonVi;
					}
					else
					{
						this._MaDonVi = default(string);
					}
					this.SendPropertyChanged("tDonVi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tTheDocGias(tTheDocGia entity)
		{
			this.SendPropertyChanging();
			entity.tDocGia = this;
		}
		
		private void detach_tTheDocGias(tTheDocGia entity)
		{
			this.SendPropertyChanging();
			entity.tDocGia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tDoiTuong")]
	public partial class tDoiTuong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDT;
		
		private string _TenDoiTuong;
		
		private EntitySet<tDocGia> _tDocGias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDTChanging(string value);
    partial void OnMaDTChanged();
    partial void OnTenDoiTuongChanging(string value);
    partial void OnTenDoiTuongChanged();
    #endregion
		
		public tDoiTuong()
		{
			this._tDocGias = new EntitySet<tDocGia>(new Action<tDocGia>(this.attach_tDocGias), new Action<tDocGia>(this.detach_tDocGias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDT", DbType="Char(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDT
		{
			get
			{
				return this._MaDT;
			}
			set
			{
				if ((this._MaDT != value))
				{
					this.OnMaDTChanging(value);
					this.SendPropertyChanging();
					this._MaDT = value;
					this.SendPropertyChanged("MaDT");
					this.OnMaDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDoiTuong", DbType="NVarChar(150)")]
		public string TenDoiTuong
		{
			get
			{
				return this._TenDoiTuong;
			}
			set
			{
				if ((this._TenDoiTuong != value))
				{
					this.OnTenDoiTuongChanging(value);
					this.SendPropertyChanging();
					this._TenDoiTuong = value;
					this.SendPropertyChanged("TenDoiTuong");
					this.OnTenDoiTuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tDoiTuong_tDocGia", Storage="_tDocGias", ThisKey="MaDT", OtherKey="MaDT")]
		public EntitySet<tDocGia> tDocGias
		{
			get
			{
				return this._tDocGias;
			}
			set
			{
				this._tDocGias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tDocGias(tDocGia entity)
		{
			this.SendPropertyChanging();
			entity.tDoiTuong = this;
		}
		
		private void detach_tDocGias(tDocGia entity)
		{
			this.SendPropertyChanging();
			entity.tDoiTuong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tDonVi")]
	public partial class tDonVi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDonVi;
		
		private string _TenDonVi;
		
		private EntitySet<tDocGia> _tDocGias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDonViChanging(string value);
    partial void OnMaDonViChanged();
    partial void OnTenDonViChanging(string value);
    partial void OnTenDonViChanged();
    #endregion
		
		public tDonVi()
		{
			this._tDocGias = new EntitySet<tDocGia>(new Action<tDocGia>(this.attach_tDocGias), new Action<tDocGia>(this.detach_tDocGias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDonVi", DbType="Char(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDonVi
		{
			get
			{
				return this._MaDonVi;
			}
			set
			{
				if ((this._MaDonVi != value))
				{
					this.OnMaDonViChanging(value);
					this.SendPropertyChanging();
					this._MaDonVi = value;
					this.SendPropertyChanged("MaDonVi");
					this.OnMaDonViChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDonVi", DbType="NVarChar(150)")]
		public string TenDonVi
		{
			get
			{
				return this._TenDonVi;
			}
			set
			{
				if ((this._TenDonVi != value))
				{
					this.OnTenDonViChanging(value);
					this.SendPropertyChanging();
					this._TenDonVi = value;
					this.SendPropertyChanged("TenDonVi");
					this.OnTenDonViChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tDonVi_tDocGia", Storage="_tDocGias", ThisKey="MaDonVi", OtherKey="MaDonVi")]
		public EntitySet<tDocGia> tDocGias
		{
			get
			{
				return this._tDocGias;
			}
			set
			{
				this._tDocGias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tDocGias(tDocGia entity)
		{
			this.SendPropertyChanging();
			entity.tDonVi = this;
		}
		
		private void detach_tDocGias(tDocGia entity)
		{
			this.SendPropertyChanging();
			entity.tDonVi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tLoaiSach")]
	public partial class tLoaiSach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoai;
		
		private string _TenLoai;
		
		private EntitySet<tSach> _tSaches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public tLoaiSach()
		{
			this._tSaches = new EntitySet<tSach>(new Action<tSach>(this.attach_tSaches), new Action<tSach>(this.detach_tSaches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="Char(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(155)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tLoaiSach_tSach", Storage="_tSaches", ThisKey="MaLoai", OtherKey="MaLoai")]
		public EntitySet<tSach> tSaches
		{
			get
			{
				return this._tSaches;
			}
			set
			{
				this._tSaches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tSaches(tSach entity)
		{
			this.SendPropertyChanging();
			entity.tLoaiSach = this;
		}
		
		private void detach_tSaches(tSach entity)
		{
			this.SendPropertyChanging();
			entity.tLoaiSach = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tMuonTra")]
	public partial class tMuonTra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaThe;
		
		private string _MaBanSao;
		
		private System.Nullable<double> _DatCoc;
		
		private System.Nullable<System.DateTime> _NgayMuon;
		
		private System.Nullable<System.DateTime> _NgayPhaiTra;
		
		private System.Nullable<System.DateTime> _NgayTra;
		
		private string _TinhTrangSach;
		
		private System.Nullable<double> _Phat;
		
		private EntityRef<tBanSaoSach> _tBanSaoSach;
		
		private EntityRef<tTheDocGia> _tTheDocGia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTheChanging(string value);
    partial void OnMaTheChanged();
    partial void OnMaBanSaoChanging(string value);
    partial void OnMaBanSaoChanged();
    partial void OnDatCocChanging(System.Nullable<double> value);
    partial void OnDatCocChanged();
    partial void OnNgayMuonChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayMuonChanged();
    partial void OnNgayPhaiTraChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayPhaiTraChanged();
    partial void OnNgayTraChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTraChanged();
    partial void OnTinhTrangSachChanging(string value);
    partial void OnTinhTrangSachChanged();
    partial void OnPhatChanging(System.Nullable<double> value);
    partial void OnPhatChanged();
    #endregion
		
		public tMuonTra()
		{
			this._tBanSaoSach = default(EntityRef<tBanSaoSach>);
			this._tTheDocGia = default(EntityRef<tTheDocGia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThe", DbType="Char(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaThe
		{
			get
			{
				return this._MaThe;
			}
			set
			{
				if ((this._MaThe != value))
				{
					if (this._tTheDocGia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTheChanging(value);
					this.SendPropertyChanging();
					this._MaThe = value;
					this.SendPropertyChanged("MaThe");
					this.OnMaTheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBanSao", DbType="Char(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaBanSao
		{
			get
			{
				return this._MaBanSao;
			}
			set
			{
				if ((this._MaBanSao != value))
				{
					if (this._tBanSaoSach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBanSaoChanging(value);
					this.SendPropertyChanging();
					this._MaBanSao = value;
					this.SendPropertyChanged("MaBanSao");
					this.OnMaBanSaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatCoc", DbType="Float")]
		public System.Nullable<double> DatCoc
		{
			get
			{
				return this._DatCoc;
			}
			set
			{
				if ((this._DatCoc != value))
				{
					this.OnDatCocChanging(value);
					this.SendPropertyChanging();
					this._DatCoc = value;
					this.SendPropertyChanged("DatCoc");
					this.OnDatCocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayMuon", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayMuon
		{
			get
			{
				return this._NgayMuon;
			}
			set
			{
				if ((this._NgayMuon != value))
				{
					this.OnNgayMuonChanging(value);
					this.SendPropertyChanging();
					this._NgayMuon = value;
					this.SendPropertyChanged("NgayMuon");
					this.OnNgayMuonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayPhaiTra", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayPhaiTra
		{
			get
			{
				return this._NgayPhaiTra;
			}
			set
			{
				if ((this._NgayPhaiTra != value))
				{
					this.OnNgayPhaiTraChanging(value);
					this.SendPropertyChanging();
					this._NgayPhaiTra = value;
					this.SendPropertyChanged("NgayPhaiTra");
					this.OnNgayPhaiTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTra", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTra
		{
			get
			{
				return this._NgayTra;
			}
			set
			{
				if ((this._NgayTra != value))
				{
					this.OnNgayTraChanging(value);
					this.SendPropertyChanging();
					this._NgayTra = value;
					this.SendPropertyChanged("NgayTra");
					this.OnNgayTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrangSach", DbType="NVarChar(155)")]
		public string TinhTrangSach
		{
			get
			{
				return this._TinhTrangSach;
			}
			set
			{
				if ((this._TinhTrangSach != value))
				{
					this.OnTinhTrangSachChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangSach = value;
					this.SendPropertyChanged("TinhTrangSach");
					this.OnTinhTrangSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phat", DbType="Float")]
		public System.Nullable<double> Phat
		{
			get
			{
				return this._Phat;
			}
			set
			{
				if ((this._Phat != value))
				{
					this.OnPhatChanging(value);
					this.SendPropertyChanging();
					this._Phat = value;
					this.SendPropertyChanged("Phat");
					this.OnPhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tBanSaoSach_tMuonTra", Storage="_tBanSaoSach", ThisKey="MaBanSao", OtherKey="MaBanSao", IsForeignKey=true)]
		public tBanSaoSach tBanSaoSach
		{
			get
			{
				return this._tBanSaoSach.Entity;
			}
			set
			{
				tBanSaoSach previousValue = this._tBanSaoSach.Entity;
				if (((previousValue != value) 
							|| (this._tBanSaoSach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tBanSaoSach.Entity = null;
						previousValue.tMuonTras.Remove(this);
					}
					this._tBanSaoSach.Entity = value;
					if ((value != null))
					{
						value.tMuonTras.Add(this);
						this._MaBanSao = value.MaBanSao;
					}
					else
					{
						this._MaBanSao = default(string);
					}
					this.SendPropertyChanged("tBanSaoSach");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tTheDocGia_tMuonTra", Storage="_tTheDocGia", ThisKey="MaThe", OtherKey="MaThe", IsForeignKey=true)]
		public tTheDocGia tTheDocGia
		{
			get
			{
				return this._tTheDocGia.Entity;
			}
			set
			{
				tTheDocGia previousValue = this._tTheDocGia.Entity;
				if (((previousValue != value) 
							|| (this._tTheDocGia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tTheDocGia.Entity = null;
						previousValue.tMuonTras.Remove(this);
					}
					this._tTheDocGia.Entity = value;
					if ((value != null))
					{
						value.tMuonTras.Add(this);
						this._MaThe = value.MaThe;
					}
					else
					{
						this._MaThe = default(string);
					}
					this.SendPropertyChanged("tTheDocGia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tNgonNgu")]
	public partial class tNgonNgu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNgonNgu;
		
		private string _TenNgonNgu;
		
		private EntitySet<tSach> _tSaches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNgonNguChanging(string value);
    partial void OnMaNgonNguChanged();
    partial void OnTenNgonNguChanging(string value);
    partial void OnTenNgonNguChanged();
    #endregion
		
		public tNgonNgu()
		{
			this._tSaches = new EntitySet<tSach>(new Action<tSach>(this.attach_tSaches), new Action<tSach>(this.detach_tSaches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNgonNgu", DbType="Char(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNgonNgu
		{
			get
			{
				return this._MaNgonNgu;
			}
			set
			{
				if ((this._MaNgonNgu != value))
				{
					this.OnMaNgonNguChanging(value);
					this.SendPropertyChanging();
					this._MaNgonNgu = value;
					this.SendPropertyChanged("MaNgonNgu");
					this.OnMaNgonNguChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNgonNgu", DbType="NVarChar(100)")]
		public string TenNgonNgu
		{
			get
			{
				return this._TenNgonNgu;
			}
			set
			{
				if ((this._TenNgonNgu != value))
				{
					this.OnTenNgonNguChanging(value);
					this.SendPropertyChanging();
					this._TenNgonNgu = value;
					this.SendPropertyChanged("TenNgonNgu");
					this.OnTenNgonNguChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tNgonNgu_tSach", Storage="_tSaches", ThisKey="MaNgonNgu", OtherKey="MaNgonNgu")]
		public EntitySet<tSach> tSaches
		{
			get
			{
				return this._tSaches;
			}
			set
			{
				this._tSaches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tSaches(tSach entity)
		{
			this.SendPropertyChanging();
			entity.tNgonNgu = this;
		}
		
		private void detach_tSaches(tSach entity)
		{
			this.SendPropertyChanging();
			entity.tNgonNgu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tNhaXB")]
	public partial class tNhaXB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNXB;
		
		private string _TenNXB;
		
		private EntitySet<tSach> _tSaches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNXBChanging(string value);
    partial void OnMaNXBChanged();
    partial void OnTenNXBChanging(string value);
    partial void OnTenNXBChanged();
    #endregion
		
		public tNhaXB()
		{
			this._tSaches = new EntitySet<tSach>(new Action<tSach>(this.attach_tSaches), new Action<tSach>(this.detach_tSaches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNXB", DbType="Char(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNXB
		{
			get
			{
				return this._MaNXB;
			}
			set
			{
				if ((this._MaNXB != value))
				{
					this.OnMaNXBChanging(value);
					this.SendPropertyChanging();
					this._MaNXB = value;
					this.SendPropertyChanged("MaNXB");
					this.OnMaNXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNXB", DbType="NVarChar(155)")]
		public string TenNXB
		{
			get
			{
				return this._TenNXB;
			}
			set
			{
				if ((this._TenNXB != value))
				{
					this.OnTenNXBChanging(value);
					this.SendPropertyChanging();
					this._TenNXB = value;
					this.SendPropertyChanged("TenNXB");
					this.OnTenNXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tNhaXB_tSach", Storage="_tSaches", ThisKey="MaNXB", OtherKey="MaNXB")]
		public EntitySet<tSach> tSaches
		{
			get
			{
				return this._tSaches;
			}
			set
			{
				this._tSaches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tSaches(tSach entity)
		{
			this.SendPropertyChanging();
			entity.tNhaXB = this;
		}
		
		private void detach_tSaches(tSach entity)
		{
			this.SendPropertyChanging();
			entity.tNhaXB = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tSach")]
	public partial class tSach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSach;
		
		private string _TenSach;
		
		private string _MaLoai;
		
		private string _MaNgonNgu;
		
		private string _MaNXB;
		
		private string _TacGia;
		
		private string _NamXB;
		
		private string _LanXB;
		
		private string _TomTat;
		
		private string _TongSoTrang;
		
		private string _Tap;
		
		private string _TongSoTap;
		
		private System.Nullable<double> _GiaTriSach;
		
		private string _FileAnh;
		
		private string _MaTheLoai;
		
		private string _GioiThieu;
		
		private EntitySet<tBanSaoSach> _tBanSaoSaches;
		
		private EntityRef<tLoaiSach> _tLoaiSach;
		
		private EntityRef<tNgonNgu> _tNgonNgu;
		
		private EntityRef<tNhaXB> _tNhaXB;
		
		private EntityRef<tTheLoai> _tTheLoai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSachChanging(string value);
    partial void OnMaSachChanged();
    partial void OnTenSachChanging(string value);
    partial void OnTenSachChanged();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    partial void OnMaNgonNguChanging(string value);
    partial void OnMaNgonNguChanged();
    partial void OnMaNXBChanging(string value);
    partial void OnMaNXBChanged();
    partial void OnTacGiaChanging(string value);
    partial void OnTacGiaChanged();
    partial void OnNamXBChanging(string value);
    partial void OnNamXBChanged();
    partial void OnLanXBChanging(string value);
    partial void OnLanXBChanged();
    partial void OnTomTatChanging(string value);
    partial void OnTomTatChanged();
    partial void OnTongSoTrangChanging(string value);
    partial void OnTongSoTrangChanged();
    partial void OnTapChanging(string value);
    partial void OnTapChanged();
    partial void OnTongSoTapChanging(string value);
    partial void OnTongSoTapChanged();
    partial void OnGiaTriSachChanging(System.Nullable<double> value);
    partial void OnGiaTriSachChanged();
    partial void OnFileAnhChanging(string value);
    partial void OnFileAnhChanged();
    partial void OnMaTheLoaiChanging(string value);
    partial void OnMaTheLoaiChanged();
    partial void OnGioiThieuChanging(string value);
    partial void OnGioiThieuChanged();
    #endregion
		
		public tSach()
		{
			this._tBanSaoSaches = new EntitySet<tBanSaoSach>(new Action<tBanSaoSach>(this.attach_tBanSaoSaches), new Action<tBanSaoSach>(this.detach_tBanSaoSaches));
			this._tLoaiSach = default(EntityRef<tLoaiSach>);
			this._tNgonNgu = default(EntityRef<tNgonNgu>);
			this._tNhaXB = default(EntityRef<tNhaXB>);
			this._tTheLoai = default(EntityRef<tTheLoai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSach", DbType="Char(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSach
		{
			get
			{
				return this._MaSach;
			}
			set
			{
				if ((this._MaSach != value))
				{
					this.OnMaSachChanging(value);
					this.SendPropertyChanging();
					this._MaSach = value;
					this.SendPropertyChanged("MaSach");
					this.OnMaSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSach", DbType="NVarChar(155)")]
		public string TenSach
		{
			get
			{
				return this._TenSach;
			}
			set
			{
				if ((this._TenSach != value))
				{
					this.OnTenSachChanging(value);
					this.SendPropertyChanging();
					this._TenSach = value;
					this.SendPropertyChanged("TenSach");
					this.OnTenSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="Char(25)")]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					if (this._tLoaiSach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNgonNgu", DbType="Char(25)")]
		public string MaNgonNgu
		{
			get
			{
				return this._MaNgonNgu;
			}
			set
			{
				if ((this._MaNgonNgu != value))
				{
					if (this._tNgonNgu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNgonNguChanging(value);
					this.SendPropertyChanging();
					this._MaNgonNgu = value;
					this.SendPropertyChanged("MaNgonNgu");
					this.OnMaNgonNguChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNXB", DbType="Char(25)")]
		public string MaNXB
		{
			get
			{
				return this._MaNXB;
			}
			set
			{
				if ((this._MaNXB != value))
				{
					if (this._tNhaXB.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNXBChanging(value);
					this.SendPropertyChanging();
					this._MaNXB = value;
					this.SendPropertyChanged("MaNXB");
					this.OnMaNXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TacGia", DbType="NVarChar(150)")]
		public string TacGia
		{
			get
			{
				return this._TacGia;
			}
			set
			{
				if ((this._TacGia != value))
				{
					this.OnTacGiaChanging(value);
					this.SendPropertyChanging();
					this._TacGia = value;
					this.SendPropertyChanged("TacGia");
					this.OnTacGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamXB", DbType="Char(4)")]
		public string NamXB
		{
			get
			{
				return this._NamXB;
			}
			set
			{
				if ((this._NamXB != value))
				{
					this.OnNamXBChanging(value);
					this.SendPropertyChanging();
					this._NamXB = value;
					this.SendPropertyChanged("NamXB");
					this.OnNamXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanXB", DbType="Char(3)")]
		public string LanXB
		{
			get
			{
				return this._LanXB;
			}
			set
			{
				if ((this._LanXB != value))
				{
					this.OnLanXBChanging(value);
					this.SendPropertyChanging();
					this._LanXB = value;
					this.SendPropertyChanged("LanXB");
					this.OnLanXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TomTat", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TomTat
		{
			get
			{
				return this._TomTat;
			}
			set
			{
				if ((this._TomTat != value))
				{
					this.OnTomTatChanging(value);
					this.SendPropertyChanging();
					this._TomTat = value;
					this.SendPropertyChanged("TomTat");
					this.OnTomTatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongSoTrang", DbType="Char(6)")]
		public string TongSoTrang
		{
			get
			{
				return this._TongSoTrang;
			}
			set
			{
				if ((this._TongSoTrang != value))
				{
					this.OnTongSoTrangChanging(value);
					this.SendPropertyChanging();
					this._TongSoTrang = value;
					this.SendPropertyChanged("TongSoTrang");
					this.OnTongSoTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tap", DbType="Char(4)")]
		public string Tap
		{
			get
			{
				return this._Tap;
			}
			set
			{
				if ((this._Tap != value))
				{
					this.OnTapChanging(value);
					this.SendPropertyChanging();
					this._Tap = value;
					this.SendPropertyChanged("Tap");
					this.OnTapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongSoTap", DbType="Char(4)")]
		public string TongSoTap
		{
			get
			{
				return this._TongSoTap;
			}
			set
			{
				if ((this._TongSoTap != value))
				{
					this.OnTongSoTapChanging(value);
					this.SendPropertyChanging();
					this._TongSoTap = value;
					this.SendPropertyChanged("TongSoTap");
					this.OnTongSoTapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaTriSach", DbType="Float")]
		public System.Nullable<double> GiaTriSach
		{
			get
			{
				return this._GiaTriSach;
			}
			set
			{
				if ((this._GiaTriSach != value))
				{
					this.OnGiaTriSachChanging(value);
					this.SendPropertyChanging();
					this._GiaTriSach = value;
					this.SendPropertyChanged("GiaTriSach");
					this.OnGiaTriSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileAnh", DbType="Char(100)")]
		public string FileAnh
		{
			get
			{
				return this._FileAnh;
			}
			set
			{
				if ((this._FileAnh != value))
				{
					this.OnFileAnhChanging(value);
					this.SendPropertyChanging();
					this._FileAnh = value;
					this.SendPropertyChanged("FileAnh");
					this.OnFileAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTheLoai", DbType="VarChar(10)")]
		public string MaTheLoai
		{
			get
			{
				return this._MaTheLoai;
			}
			set
			{
				if ((this._MaTheLoai != value))
				{
					if (this._tTheLoai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaTheLoai = value;
					this.SendPropertyChanged("MaTheLoai");
					this.OnMaTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiThieu", DbType="NVarChar(MAX)")]
		public string GioiThieu
		{
			get
			{
				return this._GioiThieu;
			}
			set
			{
				if ((this._GioiThieu != value))
				{
					this.OnGioiThieuChanging(value);
					this.SendPropertyChanging();
					this._GioiThieu = value;
					this.SendPropertyChanged("GioiThieu");
					this.OnGioiThieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tSach_tBanSaoSach", Storage="_tBanSaoSaches", ThisKey="MaSach", OtherKey="MaSach")]
		public EntitySet<tBanSaoSach> tBanSaoSaches
		{
			get
			{
				return this._tBanSaoSaches;
			}
			set
			{
				this._tBanSaoSaches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tLoaiSach_tSach", Storage="_tLoaiSach", ThisKey="MaLoai", OtherKey="MaLoai", IsForeignKey=true)]
		public tLoaiSach tLoaiSach
		{
			get
			{
				return this._tLoaiSach.Entity;
			}
			set
			{
				tLoaiSach previousValue = this._tLoaiSach.Entity;
				if (((previousValue != value) 
							|| (this._tLoaiSach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tLoaiSach.Entity = null;
						previousValue.tSaches.Remove(this);
					}
					this._tLoaiSach.Entity = value;
					if ((value != null))
					{
						value.tSaches.Add(this);
						this._MaLoai = value.MaLoai;
					}
					else
					{
						this._MaLoai = default(string);
					}
					this.SendPropertyChanged("tLoaiSach");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tNgonNgu_tSach", Storage="_tNgonNgu", ThisKey="MaNgonNgu", OtherKey="MaNgonNgu", IsForeignKey=true)]
		public tNgonNgu tNgonNgu
		{
			get
			{
				return this._tNgonNgu.Entity;
			}
			set
			{
				tNgonNgu previousValue = this._tNgonNgu.Entity;
				if (((previousValue != value) 
							|| (this._tNgonNgu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tNgonNgu.Entity = null;
						previousValue.tSaches.Remove(this);
					}
					this._tNgonNgu.Entity = value;
					if ((value != null))
					{
						value.tSaches.Add(this);
						this._MaNgonNgu = value.MaNgonNgu;
					}
					else
					{
						this._MaNgonNgu = default(string);
					}
					this.SendPropertyChanged("tNgonNgu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tNhaXB_tSach", Storage="_tNhaXB", ThisKey="MaNXB", OtherKey="MaNXB", IsForeignKey=true)]
		public tNhaXB tNhaXB
		{
			get
			{
				return this._tNhaXB.Entity;
			}
			set
			{
				tNhaXB previousValue = this._tNhaXB.Entity;
				if (((previousValue != value) 
							|| (this._tNhaXB.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tNhaXB.Entity = null;
						previousValue.tSaches.Remove(this);
					}
					this._tNhaXB.Entity = value;
					if ((value != null))
					{
						value.tSaches.Add(this);
						this._MaNXB = value.MaNXB;
					}
					else
					{
						this._MaNXB = default(string);
					}
					this.SendPropertyChanged("tNhaXB");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tTheLoai_tSach", Storage="_tTheLoai", ThisKey="MaTheLoai", OtherKey="MaTheLoai", IsForeignKey=true)]
		public tTheLoai tTheLoai
		{
			get
			{
				return this._tTheLoai.Entity;
			}
			set
			{
				tTheLoai previousValue = this._tTheLoai.Entity;
				if (((previousValue != value) 
							|| (this._tTheLoai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tTheLoai.Entity = null;
						previousValue.tSaches.Remove(this);
					}
					this._tTheLoai.Entity = value;
					if ((value != null))
					{
						value.tSaches.Add(this);
						this._MaTheLoai = value.MaTheLoai;
					}
					else
					{
						this._MaTheLoai = default(string);
					}
					this.SendPropertyChanged("tTheLoai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tBanSaoSaches(tBanSaoSach entity)
		{
			this.SendPropertyChanging();
			entity.tSach = this;
		}
		
		private void detach_tBanSaoSaches(tBanSaoSach entity)
		{
			this.SendPropertyChanging();
			entity.tSach = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tTheDocGia")]
	public partial class tTheDocGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaThe;
		
		private string _MaDG;
		
		private System.Nullable<System.DateTime> _NgayBatDau;
		
		private System.Nullable<System.DateTime> _NgayKhoaThe;
		
		private EntitySet<tMuonTra> _tMuonTras;
		
		private EntityRef<tDocGia> _tDocGia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTheChanging(string value);
    partial void OnMaTheChanged();
    partial void OnMaDGChanging(string value);
    partial void OnMaDGChanged();
    partial void OnNgayBatDauChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBatDauChanged();
    partial void OnNgayKhoaTheChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKhoaTheChanged();
    #endregion
		
		public tTheDocGia()
		{
			this._tMuonTras = new EntitySet<tMuonTra>(new Action<tMuonTra>(this.attach_tMuonTras), new Action<tMuonTra>(this.detach_tMuonTras));
			this._tDocGia = default(EntityRef<tDocGia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThe", DbType="Char(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaThe
		{
			get
			{
				return this._MaThe;
			}
			set
			{
				if ((this._MaThe != value))
				{
					this.OnMaTheChanging(value);
					this.SendPropertyChanging();
					this._MaThe = value;
					this.SendPropertyChanged("MaThe");
					this.OnMaTheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDG", DbType="Char(25)")]
		public string MaDG
		{
			get
			{
				return this._MaDG;
			}
			set
			{
				if ((this._MaDG != value))
				{
					if (this._tDocGia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDGChanging(value);
					this.SendPropertyChanging();
					this._MaDG = value;
					this.SendPropertyChanged("MaDG");
					this.OnMaDGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDau", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayBatDau
		{
			get
			{
				return this._NgayBatDau;
			}
			set
			{
				if ((this._NgayBatDau != value))
				{
					this.OnNgayBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau = value;
					this.SendPropertyChanged("NgayBatDau");
					this.OnNgayBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKhoaThe", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayKhoaThe
		{
			get
			{
				return this._NgayKhoaThe;
			}
			set
			{
				if ((this._NgayKhoaThe != value))
				{
					this.OnNgayKhoaTheChanging(value);
					this.SendPropertyChanging();
					this._NgayKhoaThe = value;
					this.SendPropertyChanged("NgayKhoaThe");
					this.OnNgayKhoaTheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tTheDocGia_tMuonTra", Storage="_tMuonTras", ThisKey="MaThe", OtherKey="MaThe")]
		public EntitySet<tMuonTra> tMuonTras
		{
			get
			{
				return this._tMuonTras;
			}
			set
			{
				this._tMuonTras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tDocGia_tTheDocGia", Storage="_tDocGia", ThisKey="MaDG", OtherKey="MaDG", IsForeignKey=true)]
		public tDocGia tDocGia
		{
			get
			{
				return this._tDocGia.Entity;
			}
			set
			{
				tDocGia previousValue = this._tDocGia.Entity;
				if (((previousValue != value) 
							|| (this._tDocGia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tDocGia.Entity = null;
						previousValue.tTheDocGias.Remove(this);
					}
					this._tDocGia.Entity = value;
					if ((value != null))
					{
						value.tTheDocGias.Add(this);
						this._MaDG = value.MaDG;
					}
					else
					{
						this._MaDG = default(string);
					}
					this.SendPropertyChanged("tDocGia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tMuonTras(tMuonTra entity)
		{
			this.SendPropertyChanging();
			entity.tTheDocGia = this;
		}
		
		private void detach_tMuonTras(tMuonTra entity)
		{
			this.SendPropertyChanging();
			entity.tTheDocGia = null;
		}
	}
}
#pragma warning restore 1591
